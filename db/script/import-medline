#!/usr/bin/env bash

usage() {
    cat <<EOF
USAGE: $0 -d [DB_SCHEMA] -h [DB_HOST] path/to/medline/gz/dir
EOF
}

to_csv() {
    python <(cat <<EOF
import csv, sys
out = csv.writer(sys.stdout, quoting=csv.QUOTE_NONNUMERIC)
for line in sys.stdin:
    fields = line.rstrip("\r\n").split("\t")
    for i,field in enumerate(fields):
        try:
            fields[i] = int(field)
        except Exception as e:
            pass
    if fields[0]:
        out.writerow(fields)
EOF
) 
}
export -f to_csv

while getopts d:h: opt; do
    case $opt in
        d) SCHEMA=$OPTARG ;;
        h) HOST=$OPTARG ;;
        ?) usage && exit 1 ;;
    esac
done
shift $((OPTIND-1))

[ -z "$SCHEMA" ] || [ -z "$HOST" ] && {
    usage
    exit 1
}

echo "Loading journals..."

parallel 'zcat {} | xsltproc --novalid src/journal.xsl -' ::: $1/medline*.xml.gz \
    | awk -F '	' 'NF==3' | sort --parallel=4 -S 1G -unk1 \
    | psql -d $SCHEMA -h $HOST -c \
    "COPY journal (id, issn, title) FROM STDIN DELIMITER '	'"

echo "Loading articles..."

parallel 'zcat {} | xsltproc --novalid src/article.xsl - | awk -F "	" "NF==5"' ::: $1/medline*.xml.gz \
    | sort -u -k1,1n -S 1G | to_csv | sed 's/""//g' \
    | psql -d $SCHEMA -h $HOST -c "COPY article (id, journal_id, publication_date, title, abstract) FROM STDIN CSV NULL ''"
